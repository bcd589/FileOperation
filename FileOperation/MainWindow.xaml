<Window x:Class="FileOperation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FileOperation"
        xmlns:viewmodels="clr-namespace:FileOperation.ViewModels"
        xmlns:converters="clr-namespace:FileOperation.Converters"
        mc:Ignorable="d"
        Title="文件类型批量管理工具" Height="600" Width="900"
        Background="#F0F0F0"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <!-- 转换器资源 -->
        <converters:IndexConverter x:Key="IndexConverter" />
        <converters:SelectedItemToIndexConverter x:Key="SelectedItemToIndexConverter" />

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
        <!-- ComboBox选中项模板 -->
        <DataTemplate x:Key="ComboBoxItemTemplate">
            <TextBlock>
                <Run Text="[" />
                <Run Text="{Binding Path=SelectedIndex, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Converter={StaticResource IndexConverter}}" />
                <Run Text="] " />
                <Run Text="{Binding SourcePath}" />
            </TextBlock>
        </DataTemplate>
        
        <!-- 图标资源 -->
        <PathGeometry x:Key="FolderIcon" Figures="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />
        <PathGeometry x:Key="FileIcon" Figures="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />
        <PathGeometry x:Key="CopyIcon" Figures="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" />
        <PathGeometry x:Key="MoveIcon" Figures="M14,18V15H10V11H14V8L19,13M20,6H12L10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6Z" />
        <PathGeometry x:Key="ScanIcon" Figures="M17,22V20H20V17H22V20.5C22,20.89 21.84,21.24 21.54,21.54C21.24,21.84 20.89,22 20.5,22H17M7,22H3.5C3.11,22 2.76,21.84 2.46,21.54C2.16,21.24 2,20.89 2,20.5V17H4V20H7V22M17,2H20.5C20.89,2 21.24,2.16 21.54,2.46C21.84,2.76 22,3.11 22,3.5V7H20V4H17V2M4,2H7V4H4V7H2V3.5C2,3.11 2.16,2.76 2.46,2.46C2.76,2.16 3.11,2 3.5,2H7M13,17.25L17,14.95V10.36L13,12.66V17.25M12,10.92L16,8.63L12,6.28L8,8.63L12,10.92M7,14.95L11,17.25V12.66L7,10.36V14.95M18.23,7.59C18.73,7.91 19,8.34 19,8.91V15.23C19,15.8 18.73,16.23 18.23,16.55L12.75,19.73C12.25,20.05 11.75,20.05 11.25,19.73L5.77,16.55C5.27,16.23 5,15.8 5,15.23V8.91C5,8.34 5.27,7.91 5.77,7.59L11.25,4.41C11.5,4.28 11.75,4.22 12,4.22C12.25,4.22 12.5,4.28 12.75,4.41L18.23,7.59Z" />
        <PathGeometry x:Key="ClearIcon" Figures="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" />
        <PathGeometry x:Key="SaveIcon" Figures="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" />
        <PathGeometry x:Key="ClockIcon" Figures="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" />
        
        <!-- 按钮样式 -->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Background" Value="#2196F3" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,5,0" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1976D2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#0D47A1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- 文本框样式 -->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5,3" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="Background" Value="White" />
        </Style>
        
        <!-- 下拉框样式 -->
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5,3" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="Background" Value="White" />
        </Style>
        
        <!-- 数据网格样式 -->
        <Style TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="#F5F5F5" />
            <Setter Property="HorizontalGridLinesBrush" Value="#E0E0E0" />
            <Setter Property="VerticalGridLinesBrush" Value="#E0E0E0" />
        </Style>
    </Window.Resources>
    
    <Window.DataContext>
        <viewmodels:MainViewModel />
    </Window.DataContext>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- 源路径 -->
        <Grid Grid.Row="0" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="源路径：" VerticalAlignment="Center" Margin="5" />
            <TextBox Grid.Column="1" Text="{Binding SourcePath, UpdateSourceTrigger=PropertyChanged}" />
            <Button Grid.Column="2" Command="{Binding BrowseSourceCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource FolderIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="浏览..." />
                </StackPanel>
            </Button>
        </Grid>
        
        <!-- 目标路径 -->
        <Grid Grid.Row="1" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="目标路径：" VerticalAlignment="Center" Margin="5" />
            <TextBox Grid.Column="1" Text="{Binding TargetPath, UpdateSourceTrigger=PropertyChanged}" />
            <Button Grid.Column="2" Command="{Binding BrowseTargetCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource FolderIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="浏览..." />
                </StackPanel>
            </Button>
        </Grid>
        
        <!-- 扩展名 -->
        <Grid Grid.Row="2" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="扩展名：" VerticalAlignment="Center" Margin="5" />
            <TextBox Grid.Column="1" Text="{Binding ExtensionsText, UpdateSourceTrigger=PropertyChanged}" 
                     ToolTip="输入文件扩展名，多个扩展名用逗号分隔，如：txt,md,docx" />
        </Grid>
        
        <!-- 历史配置 -->
        <Grid Grid.Row="3" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="历史配置：" VerticalAlignment="Center" Margin="5" />
           <ComboBox Grid.Column="1" ItemsSource="{Binding Configurations}" 
                    SelectedItem="{Binding SelectedConfiguration}"
                    AlternationCount="100">
              <!-- 自定义ComboBox样式，确保选中项显示正确的序号 -->
              <ComboBox.Style>
                  <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                      <Setter Property="Template">
                          <Setter.Value>
                              <ControlTemplate TargetType="ComboBox">
                                  <Grid>
                                      <ToggleButton x:Name="ToggleButton"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  Background="{TemplateBinding Background}"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Focusable="false">
                                          <ToggleButton.Template>
                                              <ControlTemplate TargetType="ToggleButton">
                                                  <Border x:Name="templateRoot" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                      <Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                          <Path x:Name="arrow" Data="F1 M 0,0 L 4,4 L 8,0 Z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                      </Border>
                                                  </Border>
                                                  <ControlTemplate.Triggers>
                                                      <Trigger Property="IsMouseOver" Value="true">
                                                          <Setter Property="Background" TargetName="templateRoot" Value="#FFF3F3F3"/>
                                                      </Trigger>
                                                      <Trigger Property="IsPressed" Value="true">
                                                          <Setter Property="Background" TargetName="templateRoot" Value="#FFE3E3E3"/>
                                                      </Trigger>
                                                  </ControlTemplate.Triggers>
                                              </ControlTemplate>
                                          </ToggleButton.Template>
                                      </ToggleButton>
                                      <ContentPresenter x:Name="contentPresenter"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{StaticResource ComboBoxItemTemplate}"
                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      IsHitTestVisible="false"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                      <Popup x:Name="PART_Popup"
                                            AllowsTransparency="true"
                                            Focusable="false"
                                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                            PopupAnimation="Slide"
                                            Placement="Bottom">
                                          <Border x:Name="DropDownBorder"
                                                BorderBrush="#FFABADB3"
                                                BorderThickness="1"
                                                Background="White">
                                              <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="true">
                                                  <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                              </ScrollViewer>
                                          </Border>
                                      </Popup>
                                  </Grid>
                              </ControlTemplate>
                          </Setter.Value>
                      </Setter>
                  </Style>
              </ComboBox.Style>
              <ComboBox.ItemTemplate>
                  <DataTemplate>
                      <TextBlock>
                          <Run Text="[" />
                          <Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBoxItem}}, Path=(ItemsControl.AlternationIndex), Mode=OneWay, Converter={StaticResource IndexConverter}}" />
                          <Run Text="] " />
                          <Run Text="{Binding SourcePath}" />
                      </TextBlock>
                  </DataTemplate>
              </ComboBox.ItemTemplate>
              <ComboBox.ContextMenu>
                  <ContextMenu>
                      <MenuItem Header="删除配置" Command="{Binding DeleteConfigCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />
                  </ContextMenu>
              </ComboBox.ContextMenu>
           </ComboBox>

            <Button Grid.Column="2" Command="{Binding SaveConfigCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource SaveIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="保存配置" />
                </StackPanel>
            </Button>
        </Grid>
        
        <!-- 文件列表 -->
        <DataGrid x:Name="FileListDataGrid" Grid.Row="4" Margin="10" ItemsSource="{Binding FileItems}" 
                  AutoGenerateColumns="False" SelectionMode="Extended"
                  IsReadOnly="False" CanUserAddRows="False" CanUserDeleteRows="False"
                  AlternatingRowBackground="#F5F5F5" GridLinesVisibility="Horizontal"
                  AlternationCount="100">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsProcessing}" Value="True">
                            <Setter Property="Background" Value="#FFFFE0" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsProcessed}" Value="True">
                            <Setter Property="Background" Value="#E0FFE0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <!-- 序号列 - 修正为使用行索引而非交替索引 -->
                <DataGridTemplateColumn Header="序号" Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource IndexConverter}, Mode=OneWay}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="选择" Width="50">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <CheckBox IsChecked="{Binding DataContext.IsAllSelected, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}" Click="SelectAll_Click" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" 
                                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="文件名" Binding="{Binding FileName}" Width="200" />
                <DataGridTextColumn Header="完整路径" Binding="{Binding FullPath}" Width="*" />
                <DataGridTextColumn Header="大小" Binding="{Binding FormattedSize}" Width="100" />
                <DataGridTextColumn Header="修改时间" Binding="{Binding LastWriteTime, StringFormat=yyyy-MM-dd HH:mm:ss}" Width="150" />
                <!-- 进度条列 - 修改为处理完成后保留显示 -->
                <DataGridTemplateColumn Header="处理进度" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ProgressBar Value="{Binding ProcessProgress}" Minimum="0" Maximum="100" 
                                         Height="15" Width="100">
                                <ProgressBar.Style>
                                    <Style TargetType="ProgressBar">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsProcessing}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsProcessed}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        <!-- 文件前缀设置 -->
        <Grid Grid.Row="5" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="文件前缀：" VerticalAlignment="Center" Margin="5" />
            <TextBox Grid.Column="1" Text="{Binding FilePrefix, UpdateSourceTrigger=PropertyChanged}" 
                     ToolTip="添加到目标文件名前的前缀，留空则不添加前缀" />
            <Button Grid.Column="2" Command="{Binding UseCurrentTimeCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource ClockIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="使用当前时间" />
                </StackPanel>
            </Button>
        </Grid>
        
        <!-- 操作按钮 -->
        <StackPanel Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,5,5,30">
            <Button Command="{Binding ScanCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource ScanIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="开始扫描" />
                </StackPanel>
            </Button>
            <Button Command="{Binding CopyCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource CopyIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="复制选中" />
                </StackPanel>
            </Button>
            <Button Command="{Binding MoveCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource MoveIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="移动选中" />
                </StackPanel>
            </Button>
            <Button Command="{Binding ClearCommand}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource ClearIcon}" Width="16" Height="16" Fill="White" Margin="0,0,5,0" />
                    <TextBlock Text="清空列表" />
                </StackPanel>
            </Button>
        </StackPanel>
        
        <!-- 状态栏 -->
        <StatusBar Grid.Row="6" VerticalAlignment="Bottom" Background="#E3F2FD">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="8" Height="8" Fill="#4CAF50" Margin="5,0" VerticalAlignment="Center" />
                    <TextBlock Text="{Binding StatusMessage}" Margin="5" FontWeight="Medium" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1" HorizontalContentAlignment="Stretch">
                <ProgressBar x:Name="ProgressBarStatus" Height="15" Value="{Binding ProgressValue}" Visibility="{Binding ProgressBarVisibility}" Minimum="0" Maximum="100" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding ProgressPercentText}" Visibility="{Binding ProgressBarVisibility}" Margin="5,0" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
